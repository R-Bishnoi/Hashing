//i < j < k,
//nums[j] - nums[i] == diff, and
//nums[k] - nums[j] == diff.
//Return the number of unique arithmetic triplets.


//nums[j]-nums[i]=nums[k]-nums[j]
//2*nums[j]=nums[i]+nums[k]


#include<bits/stdc++.h>
using namespace std;


int main(){
    
    int n;cin>>n;
    vector<int>v;
    for(int i=0;i<n;i++){
        int a;
        cin>>a;
        v.push_back(a);
    }
    
    int count=0;
    
  unordered_map<int,int>mp;
  
  for(int i=0;i<n;i++){
     mp[v[i]]=i; 
  } 
    
    
  for(int i=0;i<n;i++){
      for(int j=i+1;j<n;j++){
          
          if(mp.find(2*v[j]-v[i])!=mp.end()){
              int x=mp[2*v[j]-v[i]];
              if(x>j){
                  count++;
              }
          }
      }
      
  }
    
    
    
    cout<<count<<endl;
    
    
    return 0;
}
