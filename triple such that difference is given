i < j < k,
nums[j] - nums[i] == diff, and
nums[k] - nums[j] == diff.
Return the number of unique arithmetic triplets.

Input: nums = [0,1,4,6,7,10], diff = 3
Output: 2


class Solution {
public:
    int arithmeticTriplets(vector<int>&arr, int diff) {
        
   int n=arr.size();
        int count=0;
       unordered_map<int,int>mp;
        
        
        
        for(int i=0;i<n;i++){
            mp[arr[i]]=i;
        }
        
        
        
    for(int i=0;i<n;i++){
        
        int b=arr[i]+diff;
        
     if(mp.find(b)!=mp.end()){
         int c=mp[b];
         if(c>i){
             int d=b+diff;
             
       if(mp.find(d)!=mp.end()){
           int e=mp[d];
           if(e>c)count++;
       }      
             
             
         }
     }
        
    }    
        
        
        return count;
    }
};



